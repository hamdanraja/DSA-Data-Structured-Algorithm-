#include<iostream>
using namespace std;
	char tree[15];
	void setRoot(char value)
	{
		if(tree[0]=='\0')
		{
			tree[0]=value;
		}
		else
		{
			cout<<"value already exist"<<endl;
		}
	}
	int SearchNode(char value)
	{
		int index=-1;
		for(int i=0;i<15;i++)
		{
			if(tree[i]=value)
			{
				index=i;
				break;
			}
			return index;
		}	
	}
	void setLeftchild(char parent,char value)
	{
		int index=SearchNode(parent);
		if(index==-1)
		{
			cout<<"parent is not in list"<<endl;
		}
		else
		{
			tree[(2*index)+1]=value;
		}
	}
	void setRightchild(char parent,char value)
	{
		int index=SearchNode(parent);
		if(index==-1)
		{
			cout<<"parent is not in list"<<endl;
		}
		else
		{
			tree[(2*index)+2]=value;
		}
	}
	void PrintTree()
	{
		cout<<"values in tree are"<<endl;
		for(int i=0;i<15;i++)
		{
			if(tree[i]!='\0')
			{
				cout<<tree[i];
			}
			else
			{
				cout<<"-"<<endl;
			}
		}
	}
int main()	
{
	setRoot('M');
	setLeftchild('M','O');
	setRightchild('O','S');
	PrintTree();
	
}
